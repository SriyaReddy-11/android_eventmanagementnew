package com.eventmanagement;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.os.Bundle;
import android.view.MenuItem;
import android.widget.Toast;

import com.eventmanagement.Adapters.AcceptanceAdapter;
import com.eventmanagement.Adapters.BookingsAdapter;
import com.eventmanagement.Entities.BookEntity;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.Query;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class MyBookings extends AppCompatActivity {
    RecyclerView recyclerView;
    DatabaseReference databaseReference;
    BookingsAdapter bookingsAdapter;
    ArrayList<BookEntity> events = new ArrayList<>();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my_bookings);
        getSupportActionBar().setTitle("My Bookings");
        getSupportActionBar().setHomeButtonEnabled(true);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        recyclerView=findViewById(R.id.bookingsRecylcerView);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        bookingsAdapter=new BookingsAdapter();
        bookingsAdapter.setItems(new ArrayList<>());

        recyclerView.setAdapter(bookingsAdapter);
        FirebaseDatabase db = FirebaseDatabase.getInstance();
        databaseReference = db.getReference(BookEntity.class.getSimpleName());
        fetchItems();
    }

    public void fetchItems(){
        String uid=  FirebaseAuth.getInstance().getCurrentUser().getUid();

        Query query=databaseReference.orderByChild("customer").equalTo(uid);

        query.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                events=new ArrayList<>();
                for(DataSnapshot data:snapshot.getChildren()){
                    BookEntity event=data.getValue(BookEntity.class);
                    event.setKey(data.getKey());
                    events.add(event);

                }


                Toast.makeText(MyBookings.this,events.size()+"",Toast.LENGTH_LONG).show();
                bookingsAdapter.setItems(events);
                bookingsAdapter.notifyDataSetChanged();
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {

            }
        });
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                this.finish();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
}
